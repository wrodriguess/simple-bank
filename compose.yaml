version: '3'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: app
    working_dir: /code
    volumes:
      - ./:/code:delegated,rw
    networks:
      - rede1

  nginx:
    image: nginx:latest
    depends_on:
      - "app"
    links:
      - app
    ports:
      - "9090:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/code
    networks:
      - rede1

  # POSTGRES
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - rede1

  # MYSQL
  # database:
  #   image: mysql:5.7
  #   container_name: bank_bd
  #   environment:
  #     MYSQL_DB: ${MYSQL_DB:-app}
  #     # You should definitely change the password in production
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
  #     MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
  #     MYSQL_RANDOM_ROOT_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
  #     MYSQL_USER: ${MYSQL_USER:-app}
  #   volumes:
  #     - database_data:/var/lib/mysql/data:rw
  #   networks:
  #     - rede1
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  rede1:
    driver: bridge